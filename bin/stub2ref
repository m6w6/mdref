#!/usr/bin/env php
<?php

namespace mdref;

require_once $_composer_autoload_path ?? __DIR__."/../vendor/autoload.php";

if ($argc < 3) {
	fprintf(STDERR, "Usage: %s <ns> <stub.php> [<destination>]\n", $argv[0]);
	exit(1);
}

$namespace = $argv[1];
require_once $argv[2];
$destination = ($argc > 3) ? $argv[3] : ".";

if (!is_dir($destination)) {
	fprintf(STDERR, "Missing $destination/; Making dir.");
	mkdir($destination) || exit -1;
}
if (!file_exists("$destination/$namespace.mdref")) {
	fprintf(STDERR, "Missing $destination/$namespace.mdref; generated default.\n");
	file_put_contents("$destination/$namespace.mdref", "./%s") || exit -2;
}
if (!file_exists("$destination/$namespace.md")) {
	fprintf(STDERR, "Missing $destination/$namespace.md; hard linking README.md\n");
	link(dirname($argv[2]) . "/README.md", "$destination/$namespace.md") || exit -3;
}

$inspector = new Inspector;
$inspector->inspectNamespace($namespace);

$generator = new Generator($destination);
$generator->generateFunctions($inspector->getFunctions());
$generator->generateClasses($inspector->getClasses());
